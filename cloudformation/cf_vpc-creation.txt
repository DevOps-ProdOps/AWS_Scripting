{
"AWSTemplateFormatVersion" : "2010-09-09",
"Description" : "Basic VPC Creation with NAT and Private Instance",
	"Parameters" : {
		"NatServerType" : {
			"Description" : "NAT EC2 instance type",
			"Type" : "String",
			"Default" : "m1.small",
			"AllowedValues" : [  "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge", "m2.2xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge"]
		},
		
		"NatServerPrivateIp" : {
			"Description" : "NAT Instance PrivateIp",
			"Type" : "String",
			"Default" : "10.5.0.30"
		},
		
		"NatServerAmi": {
			"Type": "String",
			"Default": "ami-4f9fee26",
			"AllowedPattern": "^ami-[a-z0-9]{8}$",
			"ConstraintDescription": "Must be valid AMI ID (example: ami-z3rgl1ng)",
			"Description": "Set AMI ID for NAT server."
		},
		
		"PuppetMasterServerInstanceType" : {
			"Description" : "PuppetMasterServer EC2 instance type",
			"Type" : "String",
			"Default" : "m1.small",
			"AllowedValues" : [  "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge", "m2.2xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge"]
		},
		
		"PuppetMasterServerPrivateIp" : {
			"Description" : "PuppetMasterServer Private IP",
			"Type" : "String",
			"Default" : "10.5.1.30"
		},
		
		"PuppetMasterServerAmi": {
			"Type": "String",
			"Default": "ami-95a2e8fc",
			"AllowedPattern": "^ami-[a-z0-9]{8}$",
			"ConstraintDescription": "Must be valid AMI ID (example: ami-z3rgl1ng)",
			"Description": "Set AMI ID for PuppetMaster server."
		},
		
		"ConnectionsServerInstanceType" : {
			"Description" : "Connections EC2 instance type",
			"Type" : "String",
			"Default" : "m1.small",
			"AllowedValues" : [  "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge", "m2.2xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge"]
		},
		
		"ConnectionsServerPrivateIp" : {
			"Description" : "Connections Instance PrivateIp",
			"Type" : "String",
			"Default" : "10.5.1.31"
		},
		
		"ConnectionsServerAmi": {
			"Type": "String",
			"Default": "ami-95a2e8fc",
			"AllowedPattern": "^ami-[a-z0-9]{8}$",
			"ConstraintDescription": "Must be valid AMI ID (example: ami-z3rgl1ng)",
			"Description": "Set AMI ID for Connections server."
		},
		
		"DNSsuffix" : {
			"Description" : "DNS Name Instance Name",
			"Type" : "String"
		},
		
		"VpcCidrBlock" : {
			 "Type": "String",
			 "Default": "10.5.0.0/16",
			 "ConstraintDescription": "must be CIDR block (example: 192.168.0.0/16)",
			 "Description" : " VPC CIDR Block" 
		},
		
		"PublicSubnetCidrBlock": {
			 "Type": "String",
			 "Default": "10.5.0.0/24",
			 "ConstraintDescription": "must be CIDR block (example: 192.168.0.0/24)",
			 "Description": "Public Subnet CIDR block."
		},
		
		 "PrivateSubnetCidrBlock": {
			 "Type": "String",
			 "Default": "10.5.1.0/24",
			 "ConstraintDescription": "must be CIDR block (example: 192.168.0.0/24)",
			 "Description": "Private Subnet CIDR block."
		},
			
		"KeyName": {
            "Description": "Key Pair Name",
            "Type": "String",
			"Default" : "pcsc",
			"ConstraintDescription" : "Valid Key Pair which is already created."
        },
		
		"CorporateCidrIp" : {
			"Description" : "Your Company's CidrIp (to restrict traffic to be authorized ONLY from corporate office)",
			"Type" : "String",
			"Default" : "0.0.0.0/0"
		}
	},
		
	"Resources" : {
		"VPC" : {
			"Type" : "AWS::EC2::VPC",
			"Properties" : { "CidrBlock" : { "Ref" : "VpcCidrBlock"} }
		},
		"InternetGateway" : {
			"Type" : "AWS::EC2::InternetGateway",
			"Properties" : {}
		},
		"AttachGateway" : {
			"Type" : "AWS::EC2::VPCGatewayAttachment",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"InternetGatewayId" : { "Ref" : "InternetGateway" }
			}
		},
		
		"PublicSubnet" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"CidrBlock" : { "Ref" : "PublicSubnetCidrBlock"},
				"AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ]
				}
			}
		},
		
		"PrivateSubnet" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"CidrBlock" : { "Ref" : "PrivateSubnetCidrBlock"},
				"AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] }
			}
		},
		
		"PublicRouteTable" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : {"Ref" : "VPC"}
			}
		},
		"PrivateRouteTable" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : {"Ref" : "VPC"}
			}
		},
		
		"PublicRoute" : {
			"Type" : "AWS::EC2::Route",
			"Properties" : {
				"RouteTableId" : { "Ref" : "PublicRouteTable" },
				"DestinationCidrBlock" : "0.0.0.0/0",
				"GatewayId" : { "Ref" : "InternetGateway" }
			}
		},
		"PrivateRoute" : {
			"Type" : "AWS::EC2::Route",
			"Properties" : {
				"RouteTableId" : { "Ref" : "PrivateRouteTable" },
				"DestinationCidrBlock" : "0.0.0.0/0",
				"InstanceId" : { "Ref" : "NatServer" }
			}
		},
		
		"PublicSubnetRouteTableAssociation1" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"SubnetId" : { "Ref" : "PublicSubnet" },
				"RouteTableId" : { "Ref" : "PublicRouteTable" }
			}
		},
	
		"PrivateSubnetRouteTableAssociation1" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"SubnetId" : { "Ref" : "PrivateSubnet" },
				"RouteTableId" : { "Ref" : "PrivateRouteTable" }
			}
		},

		"PublicSubnetAcl" : {
			"Type" : "AWS::EC2::NetworkAcl",
			"Properties" : {
				"VpcId" : {"Ref" : "VPC"}
			}
		},
		
		"PrivateSubnetAcl" : {
			"Type" : "AWS::EC2::NetworkAcl",
			"Properties" : {
				"VpcId" : {"Ref" : "VPC"}
			}
		},
		
		"PublicInSubnetAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {"Ref" : "PublicSubnetAcl"},
				"RuleNumber" : "32000",
				"Protocol" : "-1",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"Icmp" : { "Code" : "-1", "Type" : "-1"},
				"PortRange" : {"From" : "1", "To" : "65535"}
			}
		},
		"PublicOutSubnetAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {"Ref" : "PublicSubnetAcl"},
				"RuleNumber" : "32000",
				"Protocol" : "-1",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : "0.0.0.0/0",
				"Icmp" : { "Code" : "-1", "Type" : "-1"},
				"PortRange" : {"From" : "1", "To" : "65535"}
			}
		},
		"PrivateInSubnetAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {"Ref" : "PrivateSubnetAcl"},
				"RuleNumber" : "32000",
				"Protocol" : "-1",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"Icmp" : { "Code" : "-1", "Type" : "-1"},
				"PortRange" : {"From" : "1", "To" : "65535"}
			}
		},
		"PrivateOutSubnetAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {"Ref" : "PrivateSubnetAcl"},
				"RuleNumber" : "32000",
				"Protocol" : "-1",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : "0.0.0.0/0",
				"Icmp" : { "Code" : "-1", "Type" : "-1"},
				"PortRange" : {"From" : "1", "To" : "65535"}
			}
		},
		"PublicSubnetAclAssocation1" : {
			"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties" : {
				"SubnetId" : { "Ref" : "PublicSubnet" },
				"NetworkAclId" : {"Ref" : "PublicSubnetAcl"}
			}
		},

		"PrivateSubnetAclAssocation1" : {
			"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties" : {
				"SubnetId" : { "Ref" : "PrivateSubnet" },
				"NetworkAclId" : {"Ref" : "PrivateSubnetAcl"}
			}
		},

		"NatServerNetworkInterface": {
		  "Type": "AWS::EC2::NetworkInterface",
		  "Properties": {
			"Description": { "Fn::Join": [ " ", [ "Network Interface for NAT server in", { "Ref": "AWS::StackName" }, "stack" ] ] },
			"SourceDestCheck": "false",
			"PrivateIpAddress": { "Ref": "NatServerPrivateIp" },
			"GroupSet": [
			  { "Ref": "NATSecurityGroup" }
			],
			"SubnetId": { "Ref": "PublicSubnet" }
		  }
		},
		
		"NATSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "NAT Security Group",
				"VpcId" : {"Ref" : "VPC"},
				"SecurityGroupEgress": [
							{ "CidrIp": "0.0.0.0/0", "FromPort": "-1", "IpProtocol": "-1", "ToPort": "-1" }
							],
				"SecurityGroupIngress": [
							{ "CidrIp": "0.0.0.0/0", "FromPort": "22", "IpProtocol": "6", "ToPort": "22" },
							{ "CidrIp": {"Ref":"VpcCidrBlock"}, "FromPort": "-1", "IpProtocol": "-1", "ToPort": "-1" }
				],
				 "VpcId": { "Ref": "VPC" }
			}
		},

		"NatServer" : {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType" : {"Ref" : "NatServerType"},
				"KeyName": { "Ref": "KeyName" },
				"ImageId": { "Ref" : "NatServerAmi" },
				"NetworkInterfaces": [ { "NetworkInterfaceId": { "Ref": "NatServerNetworkInterface" }, "DeviceIndex": "0" } ],
				"Tags": [ { "Key": "Name", "Value": {"Fn::Join": ["", ["avnet-nat-", {"Ref":"DNSsuffix"}, ".poc.eb-internal.net"]]} }]
			}
		
		},
	
			
		"PuppetMasterServerNetworkInterface": {
		  "Type": "AWS::EC2::NetworkInterface",
		  "Properties": {
			"Description": { "Fn::Join": [ " ", [ "Network Interface for PuppetMaster server in", { "Ref": "AWS::StackName" }, "stack" ] ] },
			"SourceDestCheck": "false",
			"PrivateIpAddress": { "Ref": "PuppetMasterServerPrivateIp" },
			"GroupSet": [
			  { "Ref": "PuppetMasterServerSecurityGroup" }
			],
			"SubnetId": { "Ref": "PrivateSubnet" }
		  }
		},
		
		"PuppetMasterServerSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Servers in the Private Subnets",
				"VpcId" : {"Ref" : "VPC"},
				"SecurityGroupEgress": [
							{ "CidrIp": "0.0.0.0/0", "FromPort": "-1", "IpProtocol": "-1", "ToPort": "-1" }
							],
				"SecurityGroupIngress" : [
				{ "IpProtocol" : "-1", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : {"Ref":"VpcCidrBlock"} },
				],
				"VpcId": { "Ref": "VPC" }
			}
		},
			
		"PuppetMasterServer" : {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType" : {"Ref" : "PuppetMasterServerInstanceType"},
				"KeyName": { "Ref": "KeyName" },
				 "NetworkInterfaces": [ { "NetworkInterfaceId": { "Ref": "PuppetMasterServerNetworkInterface" }, "DeviceIndex": "0" } ],
				"ImageId": { "Ref" : "PuppetMasterServerAmi" },
			
				"Tags": [ { "Key": "Name", "Value": {"Fn::Join": ["", ["avnet-puppetmaster-", {"Ref":"DNSsuffix"}, ".poc.eb-internal.net"]]} }]
				
			},
			"DependsOn" : ["NatServer", "NatEIP","PuppetMasterServerNetworkInterface"]
		
		},
			
		"ConnectionsServerNetworkInterface": {
		  "Type": "AWS::EC2::NetworkInterface",
		  "Properties": {
			"Description": { "Fn::Join": [ " ", [ "Network Interface for Connections server in", { "Ref": "AWS::StackName" }, "stack" ] ] },
			"SourceDestCheck": "false",
			"PrivateIpAddress": { "Ref": "ConnectionsServerPrivateIp" },
			"GroupSet": [
			  { "Ref": "ConnectionsServerSecurityGroup" }
			],
			"SubnetId": { "Ref": "PrivateSubnet" }
		  }
		},
		
		"ConnectionsServerSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Servers in the Private Subnets",
				"VpcId" : {"Ref" : "VPC"},
				"SecurityGroupEgress": [
							{ "CidrIp": "0.0.0.0/0", "FromPort": "-1", "IpProtocol": "-1", "ToPort": "-1" }
							],
				"SecurityGroupIngress" : [
				{ "IpProtocol" : "-1", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : {"Ref":"VpcCidrBlock"} },
				],
				"VpcId": { "Ref": "VPC" }
			}
		},
			
		"ConnectionsServer" : {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType" : {"Ref" : "ConnectionsServerInstanceType"},
				"KeyName": { "Ref": "KeyName" },
				 "NetworkInterfaces": [ { "NetworkInterfaceId": { "Ref": "ConnectionsServerNetworkInterface" }, "DeviceIndex": "0" } ],
				"ImageId": { "Ref" : "ConnectionsServerAmi" },
			
				"Tags": [ { "Key": "Name", "Value": {"Fn::Join": ["", ["avnet-connections-", {"Ref":"DNSsuffix"}, ".poc.eb-internal.net"]]} }]
				
			},
			"DependsOn" : "PuppetMasterServer"
		
		},

		"NatEIP": {
		  "Type": "AWS::EC2::EIP",
		  "Properties": {
			"Domain": "vpc",
			"InstanceId": { "Ref": "NatServer" }
		  }
		}
	},
		
	"Outputs" : {
		"VPC" : {
			"Description" : "VPC",
			"Value" : {"Ref" : "VPC"}
		},
		"PublicSubnets" : {
			"Description" : "Public Subnets",
			"Value" : {"Ref" : "PublicSubnet" }
		},
		"PrivateSubnets" : {
			"Description" : "Private Subnets",
			"Value" : {"Ref" : "PrivateSubnet" }
			
		},
		"PublicIp" : {
			"Description" : "Public Ip",
			 "Value": {
                "Fn::GetAtt": [
                    "NatServer",
                    "PublicIp"
                ]
            }
		}
	}
}